<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="button_DisplayModel" xml:space="preserve">
    <value>ビューの表示</value>
  </data>
  <data name="button_LoadModel" xml:space="preserve">
    <value>STLモデルの読込み</value>
  </data>
  <data name="button_MonitorOnOff" xml:space="preserve">
    <value>ジャイロモニタ開始</value>
  </data>
  <data name="button_SaveImage" xml:space="preserve">
    <value>キャプチャ・保存</value>
  </data>
  <data name="button_SelectBitmap" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="checkBox_CheckGround" xml:space="preserve">
    <value>市松模様床</value>
  </data>
  <data name="checkBox_CoordinateAxes" xml:space="preserve">
    <value>座標軸</value>
  </data>
  <data name="checkBox_MeshGround" xml:space="preserve">
    <value>メッシュグランド</value>
  </data>
  <data name="checkBox_shadowEnable" xml:space="preserve">
    <value>影（床高さゼロ固定）</value>
  </data>
  <data name="checkBox_SkyDome" xml:space="preserve">
    <value>青空ドーム----&gt;</value>
  </data>
  <data name="label_BackgroundColor" xml:space="preserve">
    <value>背景:</value>
  </data>
  <data name="label_ColorPalette" xml:space="preserve">
    <value>カラーパレット:</value>
  </data>
  <data name="label_far" xml:space="preserve">
    <value>far:</value>
  </data>
  <data name="label_FOV" xml:space="preserve">
    <value>FOV:</value>
  </data>
  <data name="label_GyroOperation" xml:space="preserve">
    <value>【 ジャイロ操作 】</value>
  </data>
  <data name="label_Hight" xml:space="preserve">
    <value>］高さ:</value>
  </data>
  <data name="label_LightingColor" xml:space="preserve">
    <value>ライティング:</value>
  </data>
  <data name="label_MaterialColor" xml:space="preserve">
    <value>マテリアル:</value>
  </data>
  <data name="label_near" xml:space="preserve">
    <value>near:</value>
  </data>
  <data name="label_Port" xml:space="preserve">
    <value>通信ポート:</value>
  </data>
  <data name="label_Radius" xml:space="preserve">
    <value>半径:</value>
  </data>
  <data name="label_RotationMethod" xml:space="preserve">
    <value>回転法:</value>
  </data>
  <data name="label_Timeout" xml:space="preserve">
    <value>タイムアウト(秒):</value>
  </data>
  <data name="label_ViewerOperation" xml:space="preserve">
    <value>【 ビューワ操作 】</value>
  </data>
  <data name="label_ViewportSettings" xml:space="preserve">
    <value>【 ビューポート設定(VPは自動) 】</value>
  </data>
  <data name="label_VP" xml:space="preserve">
    <value>VP x,y,z:</value>
  </data>
  <data name="label_WH" xml:space="preserve">
    <value>W, H:</value>
  </data>
  <data name="radioButton_Dark" xml:space="preserve">
    <value>ダーク</value>
  </data>
  <data name="radioButton_Light" xml:space="preserve">
    <value>ライト</value>
  </data>
  <data name="radioButton_LightingColor" xml:space="preserve">
    <value>ライティングカラー:</value>
  </data>
  <data name="radioButton_MaterialColor" xml:space="preserve">
    <value>マテリアルカラー:</value>
  </data>
  <data name="radioButton_RGBColor" xml:space="preserve">
    <value>背景色:</value>
  </data>
  <data name="radioButton_Texture" xml:space="preserve">
    <value>テクスチャー:</value>
  </data>
  <data name="comboBox_RotationMethod_Items" xml:space="preserve">
    <value>クォータニオン;オイラー角</value>
  </data>
  <data name="button_MonitorOff" xml:space="preserve">
    <value>ジャイロモニタ中断</value>
  </data>
  <data name="button_DisplayModelUpdate" xml:space="preserve">
    <value>ビューの更新</value>
  </data>
  <data name="StateMonitor_Receiving" xml:space="preserve">
    <value>受信中</value>
  </data>
  <data name="StateMonitor_Offline" xml:space="preserve">
    <value>オフライン</value>
  </data>
  <data name="StateMonitor_Waiting" xml:space="preserve">
    <value>受信待ち</value>
  </data>
  <data name="StateMonitor_Receiving_Unit" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="msgMain_1" xml:space="preserve">
    <value>モデルファイルの読み込み</value>
  </data>
  <data name="msgMain_2" xml:space="preserve">
    <value>STLモデル (*.stl)|*.stl</value>
  </data>
  <data name="msgMain_3" xml:space="preserve">
    <value>ファイルが見つかりません。</value>
  </data>
  <data name="msgMain_4" xml:space="preserve">
    <value>画像ファイルの読み込み</value>
  </data>
  <data name="msgMain_5" xml:space="preserve">
    <value>画像ファイル (*.jpg)|*.jpg</value>
  </data>
  <data name="msgMain_6" xml:space="preserve">
    <value>ファイルが見つかりません。</value>
  </data>
  <data name="msgMain_7" xml:space="preserve">
    <value>キャプチャー画像がありません。</value>
  </data>
  <data name="msgMain_8" xml:space="preserve">
    <value>画像データがありません。</value>
  </data>
  <data name="msgMain_9" xml:space="preserve">
    <value>キャプチャー画像を保存しますか？</value>
  </data>
  <data name="msgMain_10" xml:space="preserve">
    <value>PNG画像 (*.png)|*.png|JPEG画像 (*.jpg)|*.jpg</value>
  </data>
  <data name="msgMain_11" xml:space="preserve">
    <value>エラーが発生しました:</value>
  </data>
  <data name="msgMain_12" xml:space="preserve">
    <value>モデルが読み込まれていません。</value>
  </data>
  <data name="msgMain_13" xml:space="preserve">
    <value>ビューが表示されていません。</value>
  </data>
  <data name="msgView_1" xml:space="preserve">
    <value>ジャイロモニタを中断しました。</value>
  </data>
  <data name="msgView_2" xml:space="preserve">
    <value>ジャイロセンサを受信できませんでした(タイムアウト)。</value>
  </data>
  <data name="msgView_3" xml:space="preserve">
    <value>通信を中断しました。</value>
  </data>
  <data name="msgView_4" xml:space="preserve">
    <value>通信を中断されました。</value>
  </data>
  <data name="msgView_5" xml:space="preserve">
    <value>ソケットエラー:</value>
  </data>
  <data name="StateMonitor_Timeout" xml:space="preserve">
    <value>タイムアウト</value>
  </data>
  <data name="StateMonitor_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
</root>